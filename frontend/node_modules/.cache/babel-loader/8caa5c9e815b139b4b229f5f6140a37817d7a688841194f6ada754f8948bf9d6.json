{"ast":null,"code":"import axios from \"axios\";\nimport authService from \"./authService\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5004/api/rooms\";\nconst createRoom = async roomName => {\n  const token = authService.getToken();\n  const response = await axios.post(`${API_URL}`, {\n    roomName\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data.room;\n};\nconst joinRoom = async (roomId, userId) => {\n  const token = authService.getToken();\n  const response = await axios.post(`${API_URL}/join`, {\n    roomId,\n    userId\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data.room;\n};\nconst getRoomUsers = async roomId => {\n  const token = authService.getToken();\n  const response = await axios.get(`${API_URL}/${roomId}/users`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\nconst getRooms = async () => {\n  const token = authService.getToken();\n  const response = await axios.get(API_URL, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\nexport default {\n  createRoom,\n  joinRoom,\n  getRoomUsers,\n  getRooms\n};","map":{"version":3,"names":["axios","authService","API_URL","process","env","REACT_APP_API_URL","createRoom","roomName","token","getToken","response","post","headers","Authorization","data","room","joinRoom","roomId","userId","getRoomUsers","get","getRooms"],"sources":["/Users/subbukethineni/Desktop/connectppl/frontend/src/services/roomService.js"],"sourcesContent":["import axios from \"axios\";\nimport authService from \"./authService\";\n\nconst API_URL =\n  process.env.REACT_APP_API_URL || \"http://localhost:5004/api/rooms\";\n\nconst createRoom = async (roomName) => {\n  const token = authService.getToken();\n  const response = await axios.post(\n    `${API_URL}`,\n    { roomName },\n    { headers: { Authorization: `Bearer ${token}` } }\n  );\n  return response.data.room;\n};\n\nconst joinRoom = async (roomId, userId) => {\n  const token = authService.getToken();\n  const response = await axios.post(\n    `${API_URL}/join`,\n    { roomId, userId },\n    { headers: { Authorization: `Bearer ${token}` } }\n  );\n  return response.data.room;\n};\n\nconst getRoomUsers = async (roomId) => {\n  const token = authService.getToken();\n  const response = await axios.get(`${API_URL}/${roomId}/users`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return response.data;\n};\n\nconst getRooms = async () => {\n  const token = authService.getToken();\n  const response = await axios.get(API_URL, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return response.data;\n};\n\nexport default { createRoom, joinRoom, getRoomUsers, getRooms };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAEvC,MAAMC,OAAO,GACXC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,iCAAiC;AAEpE,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EACrC,MAAMC,KAAK,GAAGP,WAAW,CAACQ,QAAQ,CAAC,CAAC;EACpC,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAC/B,GAAGT,OAAO,EAAE,EACZ;IAAEK;EAAS,CAAC,EACZ;IAAEK,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUL,KAAK;IAAG;EAAE,CAClD,CAAC;EACD,OAAOE,QAAQ,CAACI,IAAI,CAACC,IAAI;AAC3B,CAAC;AAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,MAAM,EAAEC,MAAM,KAAK;EACzC,MAAMV,KAAK,GAAGP,WAAW,CAACQ,QAAQ,CAAC,CAAC;EACpC,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAC/B,GAAGT,OAAO,OAAO,EACjB;IAAEe,MAAM;IAAEC;EAAO,CAAC,EAClB;IAAEN,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUL,KAAK;IAAG;EAAE,CAClD,CAAC;EACD,OAAOE,QAAQ,CAACI,IAAI,CAACC,IAAI;AAC3B,CAAC;AAED,MAAMI,YAAY,GAAG,MAAOF,MAAM,IAAK;EACrC,MAAMT,KAAK,GAAGP,WAAW,CAACQ,QAAQ,CAAC,CAAC;EACpC,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACoB,GAAG,CAAC,GAAGlB,OAAO,IAAIe,MAAM,QAAQ,EAAE;IAC7DL,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUL,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOE,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,MAAMO,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAC3B,MAAMb,KAAK,GAAGP,WAAW,CAACQ,QAAQ,CAAC,CAAC;EACpC,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACoB,GAAG,CAAClB,OAAO,EAAE;IACxCU,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUL,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOE,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,eAAe;EAAER,UAAU;EAAEU,QAAQ;EAAEG,YAAY;EAAEE;AAAS,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}