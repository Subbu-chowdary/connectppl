{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5004/api/messages\";\nconst sendMessage = async (content, roomId) => {\n  const token = localStorage.getItem(\"token\");\n  const response = await axios.post(`${API_URL}`, {\n    content,\n    roomId\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data.message;\n};\nconst getMessages = async roomId => {\n  const token = localStorage.getItem(\"token\");\n  const response = await axios.get(`${API_URL}/${roomId}/messages`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\nconst fetchMessages = async (roomId, token) => {\n  try {\n    const response = await axios.get(`${API_URL}/${roomId}/messages`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(\"Failed to fetch messages\");\n  }\n};\nexport { sendMessage, getMessages, fetchMessages };","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","sendMessage","content","roomId","token","localStorage","getItem","response","post","headers","Authorization","data","message","getMessages","get","fetchMessages","error","Error"],"sources":["/Users/subbukethineni/Desktop/connectppl/frontend/src/services/messageService.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL =\n  process.env.REACT_APP_API_URL || \"http://localhost:5004/api/messages\";\n\nconst sendMessage = async (content, roomId) => {\n  const token = localStorage.getItem(\"token\");\n  const response = await axios.post(\n    `${API_URL}`,\n    { content, roomId },\n    { headers: { Authorization: `Bearer ${token}` } }\n  );\n  return response.data.message;\n};\n\nconst getMessages = async (roomId) => {\n  const token = localStorage.getItem(\"token\");\n  const response = await axios.get(`${API_URL}/${roomId}/messages`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return response.data;\n};\n\nconst fetchMessages = async (roomId, token) => {\n  try {\n    const response = await axios.get(`${API_URL}/${roomId}/messages`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(\"Failed to fetch messages\");\n  }\n};\n\nexport { sendMessage, getMessages, fetchMessages };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GACXC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,oCAAoC;AAEvE,MAAMC,WAAW,GAAG,MAAAA,CAAOC,OAAO,EAAEC,MAAM,KAAK;EAC7C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAC/B,GAAGX,OAAO,EAAE,EACZ;IAAEK,OAAO;IAAEC;EAAO,CAAC,EACnB;IAAEM,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUN,KAAK;IAAG;EAAE,CAClD,CAAC;EACD,OAAOG,QAAQ,CAACI,IAAI,CAACC,OAAO;AAC9B,CAAC;AAED,MAAMC,WAAW,GAAG,MAAOV,MAAM,IAAK;EACpC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACkB,GAAG,CAAC,GAAGjB,OAAO,IAAIM,MAAM,WAAW,EAAE;IAChEM,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUN,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOG,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,MAAMI,aAAa,GAAG,MAAAA,CAAOZ,MAAM,EAAEC,KAAK,KAAK;EAC7C,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMX,KAAK,CAACkB,GAAG,CAAC,GAAGjB,OAAO,IAAIM,MAAM,WAAW,EAAE;MAChEM,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUN,KAAK;MAChC;IACF,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC7C;AACF,CAAC;AAED,SAAShB,WAAW,EAAEY,WAAW,EAAEE,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}