{"ast":null,"code":"var _jsxFileName = \"/Users/subbukethineni/Desktop/connectppl/frontend/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport messageService from \"../services/messageService\";\nimport socket from \"../socket/ socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const roomId = \"your-room-id\"; // Replace with dynamic room ID\n\n  useEffect(() => {\n    // Connect to socket after login\n    socket.connect();\n\n    // Fetch initial messages\n    messageService.getMessages(roomId).then(setMessages);\n\n    // Listen for incoming messages\n    socket.on(\"receiveMessage\", message => {\n      setMessages(prev => [...prev, message]);\n    });\n    return () => socket.disconnect();\n  }, [roomId]);\n  const sendMessage = async () => {\n    if (newMessage.trim()) {\n      const message = await messageService.sendMessage(newMessage, roomId);\n      socket.emit(\"sendMessage\", message);\n      setNewMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender.username, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value),\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"bFuYpZWMfOU2WhBa/CyaGkj6fmk=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","messageService","socket","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","newMessage","setNewMessage","roomId","connect","getMessages","then","on","message","prev","disconnect","sendMessage","trim","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","sender","username","content","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/subbukethineni/Desktop/connectppl/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport messageService from \"../services/messageService\";\nimport socket from \"../socket/ socket\";\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const roomId = \"your-room-id\"; // Replace with dynamic room ID\n\n  useEffect(() => {\n    // Connect to socket after login\n    socket.connect();\n\n    // Fetch initial messages\n    messageService.getMessages(roomId).then(setMessages);\n\n    // Listen for incoming messages\n    socket.on(\"receiveMessage\", (message) => {\n      setMessages((prev) => [...prev, message]);\n    });\n\n    return () => socket.disconnect();\n  }, [roomId]);\n\n  const sendMessage = async () => {\n    if (newMessage.trim()) {\n      const message = await messageService.sendMessage(newMessage, roomId);\n      socket.emit(\"sendMessage\", message);\n      setNewMessage(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Chat Room</h2>\n      <div>\n        {messages.map((msg, index) => (\n          <div key={index}>\n            <strong>{msg.sender.username}: </strong> {msg.content}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={newMessage}\n        onChange={(e) => setNewMessage(e.target.value)}\n        placeholder=\"Type your message...\"\n      />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMY,MAAM,GAAG,cAAc,CAAC,CAAC;;EAE/BX,SAAS,CAAC,MAAM;IACd;IACAE,MAAM,CAACU,OAAO,CAAC,CAAC;;IAEhB;IACAX,cAAc,CAACY,WAAW,CAACF,MAAM,CAAC,CAACG,IAAI,CAACN,WAAW,CAAC;;IAEpD;IACAN,MAAM,CAACa,EAAE,CAAC,gBAAgB,EAAGC,OAAO,IAAK;MACvCR,WAAW,CAAES,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,OAAO,CAAC,CAAC;IAC3C,CAAC,CAAC;IAEF,OAAO,MAAMd,MAAM,CAACgB,UAAU,CAAC,CAAC;EAClC,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIV,UAAU,CAACW,IAAI,CAAC,CAAC,EAAE;MACrB,MAAMJ,OAAO,GAAG,MAAMf,cAAc,CAACkB,WAAW,CAACV,UAAU,EAAEE,MAAM,CAAC;MACpET,MAAM,CAACmB,IAAI,CAAC,aAAa,EAAEL,OAAO,CAAC;MACnCN,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBtB,OAAA;MAAAkB,QAAA,EACGf,QAAQ,CAACoB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBzB,OAAA;QAAAkB,QAAA,gBACElB,OAAA;UAAAkB,QAAA,GAASM,GAAG,CAACE,MAAM,CAACC,QAAQ,EAAC,IAAE;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,GAAG,CAACI,OAAO;MAAA,GAD7CH,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtB,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEzB,UAAW;MAClB0B,QAAQ,EAAGC,CAAC,IAAK1B,aAAa,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAsB;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFtB,OAAA;MAAQmC,OAAO,EAAEpB,WAAY;MAAAG,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACpB,EAAA,CA/CID,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AAiDV,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}